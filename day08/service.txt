<service를 사용하는 부분>
1. request/response(요청/응답과 관련없는 부분)
2. db(db와 연관성이 떨어지는 부분)
3. 요청과 응답을 제외한 상세한 부분을 처리/controller는 요청과 응답에 focus를 맞춘다
4. 순수 자바 코드를 이용해서 데이터를 가공
5. 즉, 중립적인 자바 코드를 작성하는 곳
================================================================================
DI, IoC
아무리 많은 클래스를 만들어도 서로 연결해서 사용할 수 있게 해주는 @Autowired(어노테이션)은 스프링 빈을
기반으로 한다.(스프링 빈은 기본적으로 자료형(type)을 기준으로 찾고 겹치면/변수명을 기준으로 자동으로 찾아줌)
<servlet과 root context 구별하기>
servlet-context : 요청과 관련된 것들을 넣어준다(controller, file 등) - Dispatcherservlet과 붙어있는 애들
root-context : 그 외의 것들(DAO 등) - Dispatcherservlet과 붙어있지 않은 애들
===================================================================================
요청과 관련된 매개변수를 service에 가져오지 말기???
service는 자바 기초 내용으로 충분히 구성할 수 있는 함수로 만들기
HttpServletRequest
HttpSession
MultipartRequest
MultpartFile
====================================================================================
DAO를 인터페이스로 만들어 놓으면 마이바티스가 프록시(대리자)를 생성해서 DAO에 있는 함수를 오버라이딩 해서 실행